"""initial

Revision ID: a152da4826f0
Revises: 
Create Date: 2025-05-12 19:07:22.331906

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a152da4826f0'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('team',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('sensei_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['sensei_id'], ['ninja.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='uq_team_name'),
    sa.UniqueConstraint('sensei_id'),
    sa.UniqueConstraint('sensei_id', name='uq_sensei_id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=30), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.CheckConstraint('LENGTH(email) > 0', name='email_length_check'),
    sa.CheckConstraint('LENGTH(hashed_password) > 0', name='password_length_check'),
    sa.CheckConstraint('LENGTH(username) > 0', name='username_length_check'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('email', name='uq_email'),
    sa.UniqueConstraint('username'),
    sa.UniqueConstraint('username', name='uq_username')
    )
    op.create_table('village',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('konoha', 'suna', 'kiri', 'kumo', 'iwa', 'oto', 'ame', 'kusa', 'taki', 'yuki', 'uzushiogakure', 'hoshigakure', 'yugakure', name='villageenum'), nullable=False),
    sa.Column('country', sa.Enum('fire', 'water', 'wind', 'earth', 'lightning', 'rain', 'grass', 'sound', 'waterfall', 'iron', 'moon', 'sky', 'sea', 'swamp', 'hot_springs', 'frost', 'claw', 'fang', 'wave', name='countryenum'), nullable=False),
    sa.Column('kage_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['kage_id'], ['ninja.id'], use_alter=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('kage_id'),
    sa.UniqueConstraint('kage_id', name='uq_kage_id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='uq_village_name')
    )
    op.create_table('ninja',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=20), nullable=False),
    sa.Column('chakra', sa.Integer(), server_default=sa.text('100'), nullable=False),
    sa.Column('clan', sa.String(length=20), nullable=False),
    sa.Column('level', sa.Integer(), server_default=sa.text('1'), nullable=False),
    sa.Column('experience', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('team_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('sensei', sa.String(length=20), nullable=True),
    sa.Column('summon_animal', sa.String(length=20), nullable=True),
    sa.Column('mission_completed', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('village_id', sa.Integer(), nullable=True),
    sa.Column('rank', sa.Enum('academy', 'genin', 'chunin', 'jonin', 'anbu', 'kage', name='rankenum'), server_default=sa.text("'academy'"), nullable=False),
    sa.Column('kekkei_genkai', sa.Enum('sharingan', 'byakugan', 'rinnegan', 'wood_release', 'none', name='kekkeigenkaienum'), server_default=sa.text("'none'"), nullable=True),
    sa.Column('chakra_nature', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('alive', sa.Boolean(), server_default=sa.text('true'), nullable=False),
    sa.Column('forbidden', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('jinchuriki', sa.Enum('shukaku', 'matatabi', 'isobu', 'son_goku', 'kokuo', 'saiken', 'choumei', 'gyuki', 'kurama', 'juubi', 'none', name='jinchurikienum'), server_default=sa.text("'none'"), nullable=False),
    sa.CheckConstraint('LENGTH(clan) > 0', name='clan_length_check'),
    sa.CheckConstraint('LENGTH(name) > 0', name='name_length_check'),
    sa.CheckConstraint('chakra >= 0', name='chakra_check'),
    sa.CheckConstraint('experience >= 0', name='experience_positive_check'),
    sa.CheckConstraint('level >= 1', name='min_1_lvl_check'),
    sa.CheckConstraint('mission_completed >= 0', name='mission_positive_check'),
    sa.ForeignKeyConstraint(['team_id'], ['team.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['village_id'], ['village.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('name', name='uq_ninja_name')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('ninja')
    op.drop_table('village')
    op.drop_table('user')
    op.drop_table('team')
    # ### end Alembic commands ###
